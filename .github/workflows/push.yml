# ------------------------------------------------ #
# Note: this file originates in template-terraform #
# ------------------------------------------------ #

on:
  - push
  - workflow_dispatch

name: push

jobs:
  metadata:
    runs-on: ubuntu-latest

    outputs:
      repository_is_template: ${{ steps.metadata.outputs.repository_is_template }}
      repository_default_branch: ${{ steps.metadata.outputs.repository_default_branch }}

    steps:
      - uses: actions/checkout@v3

      - id: metadata
        uses: ahmadnassri/action-metadata@v2.1.1

  commit-lint:
    timeout-minutes: 5

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: ahmadnassri/action-commit-lint@v1
        with:
          config: .github/linters/.commit-lint.yml

  super-linter:
    timeout-minutes: 5

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: github/super-linter/slim@v4
        env:
          LOG_LEVEL: ERROR
          VALIDATE_JSCPD: 'false'
          VALIDATE_ALL_CODEBASE: 'false'
          IGNORE_GITIGNORED_FILES: 'true'
          FILTER_REGEX_EXCLUDE: '/github/workspace/README.md'
          GITHUB_TOKEN: ${{ github.token }}

  terraform-apply:
    needs:
      - metadata
      - commit-lint
      - super-linter

    # only runs on main branch for non template repos
    if: |
      needs.metadata.outputs.repository_is_template == 'false' &&
      needs.metadata.outputs.repository_default_branch == github.ref_name

    timeout-minutes: 30

    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: check state
        run: |
          LOCKED=$(curl -s https://app.terraform.io/api/v2/organizations/${{ github.repository_owner }}/workspaces/github -H "Authorization: Bearer ${{ secrets.TF_TOKEN }}" | jq -r '.data.attributes.locked')
          if [[ $LOCKED == "true" ]]; then
            echo "::error::state is locked"
            exit 1
          fi

      - uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v1.3.2
        with:
          cli_config_credentials_token: ${{ secrets.TF_TOKEN }}

      # cache terraform plugins
      - uses: actions/cache@v2.1.4
        id: terraform-cache
        with:
          key: terraform-cache-${{ hashFiles('.terraform.lock.hcl') }}
          path: .terraform

      # install plugins
      - run: terraform init

      # execute plan
      - run: terraform apply -auto-approve
        env:
          TF_VAR_TF_TOKEN: ${{ secrets.TF_TOKEN }}
          TF_VAR_GH_TOKEN: ${{ secrets.GH_TOKEN }}
          TF_VAR_NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          TF_VAR_DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          TF_VAR_SECRET_ROTATION: ${{ secrets.SECRET_ROTATION }}

  template-sync:
    timeout-minutes: 20

    needs:
      - metadata
      - commit-lint
      - super-linter

    # only runs on main branch for template repos
    if: |
      needs.metadata.outputs.repository_is_template == 'true' &&
      needs.metadata.outputs.repository_default_branch == github.ref_name

    runs-on: ubuntu-latest

    steps:
      - uses: ahmadnassri/action-workflow-queue@v1.1

      - uses: actions/checkout@v3

      - uses: ahmadnassri/action-template-repository-sync@v1.6.0
        with:
          github-token: ${{ secrets.GH_TOKEN }}
